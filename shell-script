#!/bin/bash

#we can use directly the function name with () brackets OR with function: NAME without () brackets.
log() {
  local MESSAGE="${@}"
  if [[ "${VERBOSE}" = 'true' ]]
  then
    echo "${MESSAGE}"
  fi
#logger command to log messages to syslog -t for tag followed by the tag name and message.
  logger -t mohit12:sh "${MESSAGE}"
}


backup_file() {

#This function creates a backup of file, Returns a non zero status on error.

  local FILE="${1}"

#Make sure the file exists.

  if [[ -f "${FILE}" ]]
  then
     local BACKUP_FIILE="/var/tmp/$(basename ${FILE}).$(date +%F-%N)"
     log "Backing up ${FILE} to ${BACKUP_FILE}."

#The exit status of the function will be the exit status of the cp command. -p to preserver the date and timestamp of the original fil

  cp -p ${FILE} ${BACKUP_FILE}
else

#The file does not exist, So return a non-zero exit status
return 1
fi
}
readonly VERBOSE="false"
log  'Hello..'
log  'This is great..'

backup_file '/etc/passwd'

#Make a decision based on the exit status of the function.
if [[ ${?} -eq '0' ]]
 then
   echo "File backup succeeded"
else
   echo "File backup failed"
exit 1
fi
